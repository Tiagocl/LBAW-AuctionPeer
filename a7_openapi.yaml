openapi: 3.0.0
info:
  title: AuctionPeer API
  version: 1.0.0
  description: API for the AuctionPeer application, supporting user authentication, auction management, bidding, and review features.

servers:
  - url: http://lbaw.fe.up.pt
    description: Production server

externalDocs:
  description: Find out more about AuctionPeer
  url: https://gitlab.up.pt/lbaw/lbaw2425/lbaw2451/-/wikis/home

tags:
  - name: 'M01: Authentication and User Profile'
  - name: 'M02: Auction Management'
  - name: 'M03: Bidding and Auction Updates'

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Access: PUB'
      tags: [M01: Authentication and User Profile]
      responses:
        '200':
          description: Login form displayed successfully
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'User login. Access: PUB'
      tags: [M01: Authentication and User Profile]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /logout:
    get:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'User logout. Access: PUB'
      tags: [M01: Authentication and User Profile]
      responses:
        '200':
          description: Logout successful

  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide registration form. Access: PUB'
      tags: [M01: Authentication and User Profile]
      responses:
        '200':
          description: Registration form displayed successfully
    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Register a new user. Access: PUB'
      tags: [M01: Authentication and User Profile]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid registration data

  /auctions:
    get:
      operationId: R201
      summary: 'R201: View Auctions'
      description: 'List all auctions. Access: PUB'
      tags: [M02: Auction Management]
      responses:
        '200':
          description: List of auctions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auction'

  /auctions/search:
    get:
      operationId: R202
      summary: 'R202: Search Auctions'
      description: 'Search auctions. Access: PUB'
      tags: [M02: Auction Management]
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auction'

  /auctions/{auction}:
    get:
      operationId: R203
      summary: 'R203: Show Auction'
      description: 'Get auction details. Access: PUB'
      tags: [M02: Auction Management]
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'
        '404':
          description: Auction not found

  /auctions/{auction}/bids:
    get:
      operationId: R302
      summary: 'R302: Show Auction Bids'
      description: 'List bids for an auction. Access: PUB'
      tags: [M03: Bidding and Auction Updates]
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of bids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bid'
    post:
      operationId: R301
      summary: 'R301: Place Bid'
      description: 'Place a bid on an auction. Access: AUTH'
      tags: [M03: Bidding and Auction Updates]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '201':
          description: Bid placed successfully
        '400':
          description: Invalid bid
        '401':
          description: Unauthorized

  /admin/users:
    get:
      operationId: R113
      summary: 'R113: Administrate User Form'
      description: 'List all user accounts. Access: ADMIN'
      tags: [M01: Authentication and User Profile]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden - requires admin privileges

  /admin/users/create:
    get:
      operationId: R114
      summary: 'R114: Create User Form'
      description: 'Show user creation form. Access: ADMIN'
      tags: [M01: Authentication and User Profile]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User creation form displayed successfully
        '403':
          description: Forbidden - requires admin privileges
    post:
      operationId: R115
      summary: 'R115: Create User Action'
      description: 'Create new user (admin). Access: ADMIN'
      tags: [M01: Authentication and User Profile]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
        '403':
          description: Forbidden - requires admin privileges
        '400':
          description: Invalid user data

  /user/{user}:
    get:
      operationId: R106
      summary: 'R106: View Profile'
      description: 'Get user profile. Access: PUB'
      tags: [M01: Authentication and User Profile]
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    post:
      operationId: R110
      summary: 'R110: Delete User'
      description: 'Delete user account. Access: AUTH'
      tags: [M01: Authentication and User Profile]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '403':
          description: Forbidden
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        status:
          type: string
          enum: [active, inactive]
    UserCreate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        status:
          type: string
          enum: [active, inactive]
    Auction:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        minimumBid:
          type: number
        status:
          type: string
          enum: [active, ended, canceled]
    Bid:
      type: object
      properties:
        id:
          type: string
        auctionId:
          type: string
        userId:
          type: string
        amount:
          type: number
        createdAt:
          type: string
          format: date-time