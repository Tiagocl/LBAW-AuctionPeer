openapi: 3.0.0
info:
  title: AuctionPeer API
  version: 1.0.0
  description: API for the AuctionPeer application, supporting user authentication, auction management, bidding, and review features.

servers:
  - url: https://api.auctionpeer.com/v1

paths:
  /login:
    get:
      summary: Show login form
      tags: [Authentication]
      responses:
        '200':
          description: Login form displayed successfully
    post:
      summary: User login
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /logout:
    get:
      summary: User logout
      tags: [Authentication]
      responses:
        '200':
          description: Logout successful

  /register:
    get:
      summary: Show registration form
      tags: [Authentication]
      responses:
        '200':
          description: Registration form displayed successfully
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid registration data

  /auctions:
    get:
      summary: List all auctions
      tags: [Auction Management]
      responses:
        '200':
          description: List of auctions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auction'

  /auctions/search:
    get:
      summary: Search auctions
      tags: [Auction Management]
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Auction'

  /auctions/{auction}:
    get:
      summary: Get auction details
      tags: [Auction Management]
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'
        '404':
          description: Auction not found

  /auctions/{auction}/bids:
    get:
      summary: List bids for an auction
      tags: [Bidding]
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of bids
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bid'
    post:
      summary: Place a bid on an auction
      tags: [Bidding]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: auction
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
      responses:
        '201':
          description: Bid placed successfully
        '400':
          description: Invalid bid
        '401':
          description: Unauthorized

  /admin/users:
    get:
      summary: List all user accounts
      tags: [User Administration]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden - requires admin privileges

  /admin/users/create:
    get:
      summary: Show user creation form
      tags: [User Administration]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User creation form displayed successfully
        '403':
          description: Forbidden - requires admin privileges
    post:
      summary: Create new user (admin)
      tags: [User Administration]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
        '403':
          description: Forbidden - requires admin privileges
        '400':
          description: Invalid user data

  /user/{user}:
    get:
      summary: Get user profile
      tags: [User Management]
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    post:
      summary: Delete user account
      tags: [User Management]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '403':
          description: Forbidden
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        status:
          type: string
          enum: [active, inactive]
    UserCreate:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        status:
          type: string
          enum: [active, inactive]
    Auction:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        minimumBid:
          type: number
        status:
          type: string
          enum: [active, ended, canceled]
    Bid:
      type: object
      properties:
        id:
          type: string
        auctionId:
          type: string
        userId:
          type: string
        amount:
          type: number
        createdAt:
          type: string
          format: date-time